% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tinyfd.R
\name{tinyfd_beep}
\alias{tinyfd_beep}
\alias{tinyfd_notifyPopup}
\alias{tinyfd_messageBox}
\alias{tinyfd_inputBox}
\alias{tinyfd_saveFileDialog}
\alias{tinyfd_openFileDialog}
\alias{tinyfd_selectFolderDialog}
\alias{tinyfd_colorChooser}
\alias{tinyfd_details}
\title{Functions for creating tinyfiledialogs}
\usage{
tinyfd_beep()

tinyfd_notifyPopup(title, message, icon = c("info", "warning", "error"))

tinyfd_messageBox(
  title,
  message,
  type = c("ok", "okcancel", "yesno", "yesnocancel"),
  icon = c("info", "warning", "error", "question"),
  button = 0
)

tinyfd_inputBox(title, message, defaultInput = "")

tinyfd_saveFileDialog(
  title,
  defaultPathAndFile = ".",
  filterPatterns = "*.*",
  filterDescription = "All Files"
)

tinyfd_openFileDialog(
  title,
  defaultPathAndFile = ".",
  filterPatterns = "*.*",
  filterDescription = "All files",
  allowMultiple = FALSE
)

tinyfd_selectFolderDialog(title, defaultPath = ".")

tinyfd_colorChooser(title, defaultHex = "#FF0000")

tinyfd_details()
}
\arguments{
\item{title}{The dialog title}

\item{message}{The message displayed in the dialog}

\item{icon}{The type of icon to use in the dialog}

\item{type}{The options for returning from the dialog}

\item{button}{The default button selected}

\item{defaultInput}{text string determining the default input}

\item{defaultPathAndFile}{The default file and path to select from}

\item{filterPatterns}{Pattern for filetering file selection}

\item{filterDescription}{Textual description of the filter patterns}

\item{allowMultiple}{Should multiple selections be allowed}

\item{defaultPath}{The default selected path}

\item{defaultHex}{Default color as a Hex string}
}
\value{
`tinyfd_beep` and `tinyfd_notifyPopup` return the value `1` when called.

The output of `tinydf_messageBox` depends on the `type` used. In all cases clsoing the dialog returns `0`
\describe{
\item{ok}{`ok=1`}
\item{okcancel}{`ok=1`, `cancel=0`}
\item{yesno}{`yes=1`, `no=0`}
\item{yesnocancel}{`yes=1`, `no=2`, `cancel=0`}
}

`tinyfd_inputBox` returns the text string entered.

`tinyfd_saveFileDialog` and `tinyfd_openFileDialog` return the full path (or paths if the `allowMultiple` option is used) to the files selected.

`tinyfd_selectFolderDialog` returns the full path to the folder selected

`tinyfd_colorChooser` returns the string representing the Hex code chosen is closed by pressing the OK button; otherwise a zero length string is returned.

`tinyfd_details` returns a list containing whether a GUI is available (`isGUI`), the tinyfiledialogs verions (`version`) and the type of GUI available (`response`) the latter is one of :
 windows_wchar windows applescript kdialog zenity zenity3 yad matedialog
 shellementary qarma python2-tkinter python3-tkinter python-dbus
 perl-dbus gxmessage gmessage xmessage xdialog gdialog dunst
if a graphics mode is available. Other values such as
dialog whiptail basicinput no_solution
indicate a console mode which is not currently supported
}
\description{
These function open different types of dialogs generated based on the tinyfiledialogs C package. See details for the types available.
}
\details{
Describe them all....
}
\section{Functions}{
\itemize{
\item \code{tinyfd_notifyPopup()}: Notification Popup

\item \code{tinyfd_messageBox()}: Various types of message box

\item \code{tinyfd_inputBox()}: collect text input

\item \code{tinyfd_saveFileDialog()}: select file to save in

\item \code{tinyfd_openFileDialog()}: select file(s) to open

\item \code{tinyfd_selectFolderDialog()}: select folder

\item \code{tinyfd_colorChooser()}: select a color

\item \code{tinyfd_details()}: provide details of the tinyfiledialogs installation

}}
