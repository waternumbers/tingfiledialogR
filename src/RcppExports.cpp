// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// tfdR_beep
bool tfdR_beep();
RcppExport SEXP _tinyfiledialogsR_tfdR_beep() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(tfdR_beep());
    return rcpp_result_gen;
END_RCPP
}
// tfdR_notifyPopup
int tfdR_notifyPopup(std::string title, std::string message, std::string icon);
RcppExport SEXP _tinyfiledialogsR_tfdR_notifyPopup(SEXP titleSEXP, SEXP messageSEXP, SEXP iconSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type title(titleSEXP);
    Rcpp::traits::input_parameter< std::string >::type message(messageSEXP);
    Rcpp::traits::input_parameter< std::string >::type icon(iconSEXP);
    rcpp_result_gen = Rcpp::wrap(tfdR_notifyPopup(title, message, icon));
    return rcpp_result_gen;
END_RCPP
}
// tfdR_messageBox
int tfdR_messageBox(std::string title, std::string message, std::string dialog, std::string icon, int button);
RcppExport SEXP _tinyfiledialogsR_tfdR_messageBox(SEXP titleSEXP, SEXP messageSEXP, SEXP dialogSEXP, SEXP iconSEXP, SEXP buttonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type title(titleSEXP);
    Rcpp::traits::input_parameter< std::string >::type message(messageSEXP);
    Rcpp::traits::input_parameter< std::string >::type dialog(dialogSEXP);
    Rcpp::traits::input_parameter< std::string >::type icon(iconSEXP);
    Rcpp::traits::input_parameter< int >::type button(buttonSEXP);
    rcpp_result_gen = Rcpp::wrap(tfdR_messageBox(title, message, dialog, icon, button));
    return rcpp_result_gen;
END_RCPP
}
// tfdR_inputBox
std::string tfdR_inputBox(std::string title, std::string message, std::string defaultInput);
RcppExport SEXP _tinyfiledialogsR_tfdR_inputBox(SEXP titleSEXP, SEXP messageSEXP, SEXP defaultInputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type title(titleSEXP);
    Rcpp::traits::input_parameter< std::string >::type message(messageSEXP);
    Rcpp::traits::input_parameter< std::string >::type defaultInput(defaultInputSEXP);
    rcpp_result_gen = Rcpp::wrap(tfdR_inputBox(title, message, defaultInput));
    return rcpp_result_gen;
END_RCPP
}
// tfdR_saveFileDialog
std::string tfdR_saveFileDialog(std::string title, std::string defaultPathAndFile, int nFilterPatterns, std::vector<std::string> filterPatterns, std::string singleFilterDescription);
RcppExport SEXP _tinyfiledialogsR_tfdR_saveFileDialog(SEXP titleSEXP, SEXP defaultPathAndFileSEXP, SEXP nFilterPatternsSEXP, SEXP filterPatternsSEXP, SEXP singleFilterDescriptionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type title(titleSEXP);
    Rcpp::traits::input_parameter< std::string >::type defaultPathAndFile(defaultPathAndFileSEXP);
    Rcpp::traits::input_parameter< int >::type nFilterPatterns(nFilterPatternsSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type filterPatterns(filterPatternsSEXP);
    Rcpp::traits::input_parameter< std::string >::type singleFilterDescription(singleFilterDescriptionSEXP);
    rcpp_result_gen = Rcpp::wrap(tfdR_saveFileDialog(title, defaultPathAndFile, nFilterPatterns, filterPatterns, singleFilterDescription));
    return rcpp_result_gen;
END_RCPP
}
// tfdR_openFileDialog
std::string tfdR_openFileDialog(std::string title, std::string defaultPathAndFile, int nFilterPatterns, std::vector<std::string> filterPatterns, std::string singleFilterDescription, int allowMultipleSelects);
RcppExport SEXP _tinyfiledialogsR_tfdR_openFileDialog(SEXP titleSEXP, SEXP defaultPathAndFileSEXP, SEXP nFilterPatternsSEXP, SEXP filterPatternsSEXP, SEXP singleFilterDescriptionSEXP, SEXP allowMultipleSelectsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type title(titleSEXP);
    Rcpp::traits::input_parameter< std::string >::type defaultPathAndFile(defaultPathAndFileSEXP);
    Rcpp::traits::input_parameter< int >::type nFilterPatterns(nFilterPatternsSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type filterPatterns(filterPatternsSEXP);
    Rcpp::traits::input_parameter< std::string >::type singleFilterDescription(singleFilterDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type allowMultipleSelects(allowMultipleSelectsSEXP);
    rcpp_result_gen = Rcpp::wrap(tfdR_openFileDialog(title, defaultPathAndFile, nFilterPatterns, filterPatterns, singleFilterDescription, allowMultipleSelects));
    return rcpp_result_gen;
END_RCPP
}
// tfdR_selectFolderDialog
std::string tfdR_selectFolderDialog(std::string title, std::string defaultPath);
RcppExport SEXP _tinyfiledialogsR_tfdR_selectFolderDialog(SEXP titleSEXP, SEXP defaultPathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type title(titleSEXP);
    Rcpp::traits::input_parameter< std::string >::type defaultPath(defaultPathSEXP);
    rcpp_result_gen = Rcpp::wrap(tfdR_selectFolderDialog(title, defaultPath));
    return rcpp_result_gen;
END_RCPP
}
// tfdR_colorChooser
std::string tfdR_colorChooser(std::string title, std::string defaultHexRGB);
RcppExport SEXP _tinyfiledialogsR_tfdR_colorChooser(SEXP titleSEXP, SEXP defaultHexRGBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type title(titleSEXP);
    Rcpp::traits::input_parameter< std::string >::type defaultHexRGB(defaultHexRGBSEXP);
    rcpp_result_gen = Rcpp::wrap(tfdR_colorChooser(title, defaultHexRGB));
    return rcpp_result_gen;
END_RCPP
}
// tfdR_version
std::string tfdR_version();
RcppExport SEXP _tinyfiledialogsR_tfdR_version() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(tfdR_version());
    return rcpp_result_gen;
END_RCPP
}
// tfdR_response
std::string tfdR_response();
RcppExport SEXP _tinyfiledialogsR_tfdR_response() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(tfdR_response());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tinyfiledialogsR_tfdR_beep", (DL_FUNC) &_tinyfiledialogsR_tfdR_beep, 0},
    {"_tinyfiledialogsR_tfdR_notifyPopup", (DL_FUNC) &_tinyfiledialogsR_tfdR_notifyPopup, 3},
    {"_tinyfiledialogsR_tfdR_messageBox", (DL_FUNC) &_tinyfiledialogsR_tfdR_messageBox, 5},
    {"_tinyfiledialogsR_tfdR_inputBox", (DL_FUNC) &_tinyfiledialogsR_tfdR_inputBox, 3},
    {"_tinyfiledialogsR_tfdR_saveFileDialog", (DL_FUNC) &_tinyfiledialogsR_tfdR_saveFileDialog, 5},
    {"_tinyfiledialogsR_tfdR_openFileDialog", (DL_FUNC) &_tinyfiledialogsR_tfdR_openFileDialog, 6},
    {"_tinyfiledialogsR_tfdR_selectFolderDialog", (DL_FUNC) &_tinyfiledialogsR_tfdR_selectFolderDialog, 2},
    {"_tinyfiledialogsR_tfdR_colorChooser", (DL_FUNC) &_tinyfiledialogsR_tfdR_colorChooser, 2},
    {"_tinyfiledialogsR_tfdR_version", (DL_FUNC) &_tinyfiledialogsR_tfdR_version, 0},
    {"_tinyfiledialogsR_tfdR_response", (DL_FUNC) &_tinyfiledialogsR_tfdR_response, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_tinyfiledialogsR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
